// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_interface.java
// Do not modify

package org.projectfloodlight.openflow.protocol;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import java.util.List;
import java.util.Set;
import io.netty.buffer.ByteBuf;

public interface OFFlowMod extends OFObject, OFMessage {
    List<OFAction> getActions() throws UnsupportedOperationException;
    OFBufferId getBufferId();
    OFFlowModCommand getCommand();
    U64 getCookie();
    U64 getCookieMask() throws UnsupportedOperationException;
    Set<OFFlowModFlags> getFlags();
    int getHardTimeout();
    int getIdleTimeout();
    int getImportance() throws UnsupportedOperationException;
    List<OFInstruction> getInstructions() throws UnsupportedOperationException;
    Match getMatch();
    OFGroup getOutGroup() throws UnsupportedOperationException;
    OFPort getOutPort();
    int getPriority();
    TableId getTableId() throws UnsupportedOperationException;
    OFType getType();
    OFVersion getVersion();
    long getXid();

    void writeTo(ByteBuf channelBuffer);

    Builder createBuilder();
    public interface Builder extends OFMessage.Builder {
        OFFlowMod build();
        List<OFAction> getActions() throws UnsupportedOperationException;
        Builder setActions(List<OFAction> actions) throws UnsupportedOperationException;
        OFBufferId getBufferId();
        Builder setBufferId(OFBufferId bufferId);
        OFFlowModCommand getCommand();
        U64 getCookie();
        Builder setCookie(U64 cookie);
        U64 getCookieMask() throws UnsupportedOperationException;
        Builder setCookieMask(U64 cookieMask) throws UnsupportedOperationException;
        Set<OFFlowModFlags> getFlags();
        Builder setFlags(Set<OFFlowModFlags> flags);
        int getHardTimeout();
        Builder setHardTimeout(int hardTimeout);
        int getIdleTimeout();
        Builder setIdleTimeout(int idleTimeout);
        int getImportance() throws UnsupportedOperationException;
        Builder setImportance(int importance) throws UnsupportedOperationException;
        List<OFInstruction> getInstructions() throws UnsupportedOperationException;
        Builder setInstructions(List<OFInstruction> instructions) throws UnsupportedOperationException;
        Match getMatch();
        Builder setMatch(Match match);
        OFGroup getOutGroup() throws UnsupportedOperationException;
        Builder setOutGroup(OFGroup outGroup) throws UnsupportedOperationException;
        OFPort getOutPort();
        Builder setOutPort(OFPort outPort);
        int getPriority();
        Builder setPriority(int priority);
        TableId getTableId() throws UnsupportedOperationException;
        Builder setTableId(TableId tableId) throws UnsupportedOperationException;
        OFType getType();
        OFVersion getVersion();
        long getXid();
        Builder setXid(long xid);
    }
}
