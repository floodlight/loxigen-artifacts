// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_interface.java
// Do not modify

package org.projectfloodlight.openflow.protocol;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import io.netty.buffer.ByteBuf;

public interface OFPortDescPropBsnExtendedCapabilities extends OFObject, OFPortDescPropBsn {
    int getType();
    long getExperimenter();
    long getExpType();
    short getAnConfigurable();
    short getFecConfigurable();
    short getAnConflict();
    short getFecConflict();
    U64 getReserve1();
    U64 getReserve2();
    U64 getReserve3();
    OFVersion getVersion();

    void writeTo(ByteBuf channelBuffer);

    Builder createBuilder();
    public interface Builder extends OFPortDescPropBsn.Builder {
        OFPortDescPropBsnExtendedCapabilities build();
        int getType();
        long getExperimenter();
        long getExpType();
        Builder setExpType(long expType);
        short getAnConfigurable();
        Builder setAnConfigurable(short anConfigurable);
        short getFecConfigurable();
        Builder setFecConfigurable(short fecConfigurable);
        short getAnConflict();
        Builder setAnConflict(short anConflict);
        short getFecConflict();
        Builder setFecConflict(short fecConflict);
        U64 getReserve1();
        Builder setReserve1(U64 reserve1);
        U64 getReserve2();
        Builder setReserve2(U64 reserve2);
        U64 getReserve3();
        Builder setReserve3(U64 reserve3);
        OFVersion getVersion();
    }
}
