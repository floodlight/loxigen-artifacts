// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_virtual_class.java
// Do not modify

package org.projectfloodlight.openflow.protocol.ver14;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import io.netty.buffer.ByteBuf;
import java.util.Set;

abstract class OFMessageVer14 {
    // version: 1.4
    final static byte WIRE_VERSION = 5;
    final static int MINIMUM_LENGTH = 8;


    public final static OFMessageVer14.Reader READER = new Reader();

    static class Reader implements OFMessageReader<OFMessage> {
        @Override
        public OFMessage readFrom(ByteBuf bb) throws OFParseError {
            if(bb.readableBytes() < MINIMUM_LENGTH)
                return null;
            int start = bb.readerIndex();
            // fixed value property version == 5
            byte version = bb.readByte();
            if(version != (byte) 0x5)
                throw new OFParseError("Wrong version: Expected=OFVersion.OF_14(5), got="+version);
            byte type = bb.readByte();
            bb.readerIndex(start);
            switch(type) {
               case (byte) 0x1b:
                   // discriminator value OFType.GET_ASYNC_REPLY=27 for class OFAsyncGetReplyVer14
                   return OFAsyncGetReplyVer14.READER.readFrom(bb);
               case (byte) 0x1a:
                   // discriminator value OFType.GET_ASYNC_REQUEST=26 for class OFAsyncGetRequestVer14
                   return OFAsyncGetRequestVer14.READER.readFrom(bb);
               case (byte) 0x1c:
                   // discriminator value OFType.SET_ASYNC=28 for class OFAsyncSetVer14
                   return OFAsyncSetVer14.READER.readFrom(bb);
               case (byte) 0x15:
                   // discriminator value OFType.BARRIER_REPLY=21 for class OFBarrierReplyVer14
                   return OFBarrierReplyVer14.READER.readFrom(bb);
               case (byte) 0x14:
                   // discriminator value OFType.BARRIER_REQUEST=20 for class OFBarrierRequestVer14
                   return OFBarrierRequestVer14.READER.readFrom(bb);
               case (byte) 0x22:
                   // discriminator value OFType.BUNDLE_ADD_MESSAGE=34 for class OFBundleAddMsgVer14
                   return OFBundleAddMsgVer14.READER.readFrom(bb);
               case (byte) 0x21:
                   // discriminator value OFType.BUNDLE_CONTROL=33 for class OFBundleCtrlMsgVer14
                   return OFBundleCtrlMsgVer14.READER.readFrom(bb);
               case (byte) 0x3:
                   // discriminator value OFType.ECHO_REPLY=3 for class OFEchoReplyVer14
                   return OFEchoReplyVer14.READER.readFrom(bb);
               case (byte) 0x2:
                   // discriminator value OFType.ECHO_REQUEST=2 for class OFEchoRequestVer14
                   return OFEchoRequestVer14.READER.readFrom(bb);
               case (byte) 0x1:
                   // discriminator value OFType.ERROR=1 for class OFErrorMsgVer14
                   return OFErrorMsgVer14.READER.readFrom(bb);
               case (byte) 0x4:
                   // discriminator value OFType.EXPERIMENTER=4 for class OFExperimenterVer14
                   return OFExperimenterVer14.READER.readFrom(bb);
               case (byte) 0x6:
                   // discriminator value OFType.FEATURES_REPLY=6 for class OFFeaturesReplyVer14
                   return OFFeaturesReplyVer14.READER.readFrom(bb);
               case (byte) 0x5:
                   // discriminator value OFType.FEATURES_REQUEST=5 for class OFFeaturesRequestVer14
                   return OFFeaturesRequestVer14.READER.readFrom(bb);
               case (byte) 0xe:
                   // discriminator value OFType.FLOW_MOD=14 for class OFFlowModVer14
                   return OFFlowModVer14.READER.readFrom(bb);
               case (byte) 0xb:
                   // discriminator value OFType.FLOW_REMOVED=11 for class OFFlowRemovedVer14
                   return OFFlowRemovedVer14.READER.readFrom(bb);
               case (byte) 0x8:
                   // discriminator value OFType.GET_CONFIG_REPLY=8 for class OFGetConfigReplyVer14
                   return OFGetConfigReplyVer14.READER.readFrom(bb);
               case (byte) 0x7:
                   // discriminator value OFType.GET_CONFIG_REQUEST=7 for class OFGetConfigRequestVer14
                   return OFGetConfigRequestVer14.READER.readFrom(bb);
               case (byte) 0xf:
                   // discriminator value OFType.GROUP_MOD=15 for class OFGroupModVer14
                   return OFGroupModVer14.READER.readFrom(bb);
               case (byte) 0x0:
                   // discriminator value OFType.HELLO=0 for class OFHelloVer14
                   return OFHelloVer14.READER.readFrom(bb);
               case (byte) 0x1d:
                   // discriminator value OFType.METER_MOD=29 for class OFMeterModVer14
                   return OFMeterModVer14.READER.readFrom(bb);
               case (byte) 0xa:
                   // discriminator value OFType.PACKET_IN=10 for class OFPacketInVer14
                   return OFPacketInVer14.READER.readFrom(bb);
               case (byte) 0xd:
                   // discriminator value OFType.PACKET_OUT=13 for class OFPacketOutVer14
                   return OFPacketOutVer14.READER.readFrom(bb);
               case (byte) 0x10:
                   // discriminator value OFType.PORT_MOD=16 for class OFPortModVer14
                   return OFPortModVer14.READER.readFrom(bb);
               case (byte) 0xc:
                   // discriminator value OFType.PORT_STATUS=12 for class OFPortStatusVer14
                   return OFPortStatusVer14.READER.readFrom(bb);
               case (byte) 0x20:
                   // discriminator value OFType.REQUESTFORWARD=32 for class OFRequestforwardVer14
                   return OFRequestforwardVer14.READER.readFrom(bb);
               case (byte) 0x19:
                   // discriminator value OFType.ROLE_REPLY=25 for class OFRoleReplyVer14
                   return OFRoleReplyVer14.READER.readFrom(bb);
               case (byte) 0x18:
                   // discriminator value OFType.ROLE_REQUEST=24 for class OFRoleRequestVer14
                   return OFRoleRequestVer14.READER.readFrom(bb);
               case (byte) 0x1e:
                   // discriminator value OFType.ROLE_STATUS=30 for class OFRoleStatusVer14
                   return OFRoleStatusVer14.READER.readFrom(bb);
               case (byte) 0x9:
                   // discriminator value OFType.SET_CONFIG=9 for class OFSetConfigVer14
                   return OFSetConfigVer14.READER.readFrom(bb);
               case (byte) 0x13:
                   // discriminator value OFType.STATS_REPLY=19 for class OFStatsReplyVer14
                   return OFStatsReplyVer14.READER.readFrom(bb);
               case (byte) 0x12:
                   // discriminator value OFType.STATS_REQUEST=18 for class OFStatsRequestVer14
                   return OFStatsRequestVer14.READER.readFrom(bb);
               case (byte) 0x11:
                   // discriminator value OFType.TABLE_MOD=17 for class OFTableModVer14
                   return OFTableModVer14.READER.readFrom(bb);
               case (byte) 0x1f:
                   // discriminator value OFType.TABLE_STATUS=31 for class OFTableStatusVer14
                   return OFTableStatusVer14.READER.readFrom(bb);
               default:
                   throw new OFParseError("Unknown value for discriminator type of class OFMessageVer14: " + type);
            }
        }
    }
}
