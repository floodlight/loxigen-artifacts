// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_virtual_class.java
// Do not modify

package org.projectfloodlight.openflow.protocol.ver14;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import io.netty.buffer.ByteBuf;
import java.util.Set;

abstract class OFTableFeaturePropVer14 {
    // version: 1.4
    final static byte WIRE_VERSION = 5;
    final static int MINIMUM_LENGTH = 4;


    public final static OFTableFeaturePropVer14.Reader READER = new Reader();

    static class Reader implements OFMessageReader<OFTableFeatureProp> {
        @Override
        public OFTableFeatureProp readFrom(ByteBuf bb) throws OFParseError {
            if(bb.readableBytes() < MINIMUM_LENGTH)
                return null;
            int start = bb.readerIndex();
            short type = bb.readShort();
            bb.readerIndex(start);
            switch(type) {
               case (short) 0x6:
                   // discriminator value 0x6=0x6 for class OFTableFeaturePropApplyActionsVer14
                   return OFTableFeaturePropApplyActionsVer14.READER.readFrom(bb);
               case (short) 0x7:
                   // discriminator value 0x7=0x7 for class OFTableFeaturePropApplyActionsMissVer14
                   return OFTableFeaturePropApplyActionsMissVer14.READER.readFrom(bb);
               case (short) 0xe:
                   // discriminator value 0xe=0xe for class OFTableFeaturePropApplySetfieldVer14
                   return OFTableFeaturePropApplySetfieldVer14.READER.readFrom(bb);
               case (short) 0xf:
                   // discriminator value 0xf=0xf for class OFTableFeaturePropApplySetfieldMissVer14
                   return OFTableFeaturePropApplySetfieldMissVer14.READER.readFrom(bb);
               case (short) 0xfffe:
                   // discriminator value 0xfffe=0xfffe for class OFTableFeaturePropExperimenterVer14
                   return OFTableFeaturePropExperimenterVer14.READER.readFrom(bb);
               case (short) 0xffff:
                   // discriminator value 0xffff=0xffff for class OFTableFeaturePropExperimenterMissVer14
                   return OFTableFeaturePropExperimenterMissVer14.READER.readFrom(bb);
               case (short) 0x0:
                   // discriminator value 0x0=0x0 for class OFTableFeaturePropInstructionsVer14
                   return OFTableFeaturePropInstructionsVer14.READER.readFrom(bb);
               case (short) 0x1:
                   // discriminator value 0x1=0x1 for class OFTableFeaturePropInstructionsMissVer14
                   return OFTableFeaturePropInstructionsMissVer14.READER.readFrom(bb);
               case (short) 0x8:
                   // discriminator value 0x8=0x8 for class OFTableFeaturePropMatchVer14
                   return OFTableFeaturePropMatchVer14.READER.readFrom(bb);
               case (short) 0x2:
                   // discriminator value 0x2=0x2 for class OFTableFeaturePropNextTablesVer14
                   return OFTableFeaturePropNextTablesVer14.READER.readFrom(bb);
               case (short) 0x3:
                   // discriminator value 0x3=0x3 for class OFTableFeaturePropNextTablesMissVer14
                   return OFTableFeaturePropNextTablesMissVer14.READER.readFrom(bb);
               case (short) 0x10:
                   // discriminator value 0x10=0x10 for class OFTableFeaturePropTableSyncFromVer14
                   return OFTableFeaturePropTableSyncFromVer14.READER.readFrom(bb);
               case (short) 0xa:
                   // discriminator value 0xa=0xa for class OFTableFeaturePropWildcardsVer14
                   return OFTableFeaturePropWildcardsVer14.READER.readFrom(bb);
               case (short) 0x4:
                   // discriminator value 0x4=0x4 for class OFTableFeaturePropWriteActionsVer14
                   return OFTableFeaturePropWriteActionsVer14.READER.readFrom(bb);
               case (short) 0x5:
                   // discriminator value 0x5=0x5 for class OFTableFeaturePropWriteActionsMissVer14
                   return OFTableFeaturePropWriteActionsMissVer14.READER.readFrom(bb);
               case (short) 0xc:
                   // discriminator value 0xc=0xc for class OFTableFeaturePropWriteSetfieldVer14
                   return OFTableFeaturePropWriteSetfieldVer14.READER.readFrom(bb);
               case (short) 0xd:
                   // discriminator value 0xd=0xd for class OFTableFeaturePropWriteSetfieldMissVer14
                   return OFTableFeaturePropWriteSetfieldMissVer14.READER.readFrom(bb);
               default:
                   throw new OFParseError("Unknown value for discriminator type of class OFTableFeaturePropVer14: " + type);
            }
        }
    }
}
