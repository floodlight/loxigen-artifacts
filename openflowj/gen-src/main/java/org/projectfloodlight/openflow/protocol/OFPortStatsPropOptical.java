// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template of_interface.java
// Do not modify

package org.projectfloodlight.openflow.protocol;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import io.netty.buffer.ByteBuf;

public interface OFPortStatsPropOptical extends OFObject, OFPortStatsProp {
    int getBiasCurrent();
    long getFlags();
    long getRxFreqLmda();
    long getRxGridSpan();
    long getRxOffset();
    int getRxPwr();
    int getTemperature();
    long getTxFreqLmda();
    long getTxGridSpan();
    long getTxOffset();
    int getTxPwr();
    int getType();
    OFVersion getVersion();

    void writeTo(ByteBuf channelBuffer);

    Builder createBuilder();
    public interface Builder extends OFPortStatsProp.Builder {
        OFPortStatsPropOptical build();
        int getBiasCurrent();
        Builder setBiasCurrent(int biasCurrent);
        long getFlags();
        Builder setFlags(long flags);
        long getRxFreqLmda();
        Builder setRxFreqLmda(long rxFreqLmda);
        long getRxGridSpan();
        Builder setRxGridSpan(long rxGridSpan);
        long getRxOffset();
        Builder setRxOffset(long rxOffset);
        int getRxPwr();
        Builder setRxPwr(int rxPwr);
        int getTemperature();
        Builder setTemperature(int temperature);
        long getTxFreqLmda();
        Builder setTxFreqLmda(long txFreqLmda);
        long getTxGridSpan();
        Builder setTxGridSpan(long txGridSpan);
        long getTxOffset();
        Builder setTxOffset(long txOffset);
        int getTxPwr();
        Builder setTxPwr(int txPwr);
        int getType();
        OFVersion getVersion();
    }
}
